<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ps1</string>
		<string>psm1</string>
		<string>psd1</string>
	</array>
	<key>name</key>
	<string>PowerShell</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#commentBlock</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[2-6]&gt;&amp;1|&gt;&gt;|&gt;|&lt;&lt;|&lt;|&gt;|&gt;\||[1-6]&gt;|[1-6]&gt;&gt;</string>
			<key>name</key>
			<string>keyword.operator.redirection.powershell</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#commands</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#commentLine</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#interpolatedStringContent</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attribute</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#UsingDirective</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#hashtable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scriptblock</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numericConstant</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=@\()</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.array.begin.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.array-expression.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\))(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#interpolation</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\b(([\p{L}0-9_\.!%^&amp;+=][\p{L}0-9_\.!@#%^&amp;+=-]*)\.(?i:exe|com|cmd|bat))\b)</string>
			<key>name</key>
			<string>support.function.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w|-|\.)((?i:begin|break|catch|continue|data|default|define|do|dynamicparam|else|elseif|end|exit|finally|for|from|if|in|inlinescript|parallel|param|process|return|sequence|switch|throw|trap|try|until|var|while)\b(?![\/.-]))</string>
			<key>name</key>
			<string>keyword.control.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w|-|[^\)]\.)((?i:(foreach|where)\b(?![\/.-])))</string>
			<key>name</key>
			<string>keyword.control.powershell</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;!\w)(--%)(?!\w)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$|(?=\|)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[^"\x{201C}-\x{201E}]+?</string>
					<key>name</key>
					<string>string.unquoted.powershell</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:["\x{201C}-\x{201E}])</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:["\x{201C}-\x{201E}])|$</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.powershell</string>
				</dict>
			</array>
			<key>comment</key>
			<string>This should be moved to the repository at some point.</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;![\w-])((?i:class))(?=\s)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[^\s])|(?&lt;=})</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;![\w-])([\p{L}_]\w*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\s])|(?&lt;=})</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>:</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.colon.powershell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[^\s:])|(?&lt;=})</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;![\w-])([\p{L}_]\w*(?:\.\g&lt;1&gt;?)?)</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#type_keywords</string>
												</dict>
												<dict>
													<key>match</key>
													<string>[^\.]+</string>
													<key>name</key>
													<string>entity.other.inherited-class.powershell</string>
												</dict>
												<dict>
													<key>match</key>
													<string>\.</string>
													<key>name</key>
													<string>punctuation.accessor.type.powershell</string>
												</dict>
											</array>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[^\s])|(?&lt;=})</string>
									<key>applyEndPatternLast</key>
									<true/>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>,</string>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.comma.powershell</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=[^\s:])|(?&lt;=})</string>
											<key>applyEndPatternLast</key>
											<true/>
											<key>patterns</key>
											<array>
												<dict>
													<key>begin</key>
													<string>(?&lt;![\w-])([\p{L}_]\w*(?:\.\g&lt;1&gt;?)?)</string>
													<key>beginCaptures</key>
													<dict>
														<key>0</key>
														<dict>
															<key>patterns</key>
															<array>
																<dict>
																	<key>include</key>
																	<string>#type_keywords</string>
																</dict>
																<dict>
																	<key>match</key>
																	<string>[^\.]+</string>
																	<key>name</key>
																	<string>entity.other.inherited-class.powershell</string>
																</dict>
																<dict>
																	<key>match</key>
																	<string>\.</string>
																	<key>name</key>
																	<string>punctuation.accessor.type.powershell</string>
																</dict>
															</array>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=[^\s])|(?&lt;=})</string>
													<key>applyEndPatternLast</key>
													<true/>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#commentBlock</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#commentLine</string>
														</dict>
														<dict>
															<key>match</key>
															<string>(?&lt;!})[^\s{},]+</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#commentBlock</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#commentLine</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#commentBlock</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#commentLine</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?&lt;!})[^\s{},]+</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentBlock</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentLine</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!})[^\s{}:]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.class.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;![\w-])((?i:hidden|static))(?=\s)</string>
							<key>name</key>
							<string>storage.modifier.powershell</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;![\w-])([\p{L}_]\w*)(?=\s*\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.powershell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[;}])</string>
							<key>name</key>
							<string>meta.method.powershell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>:</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.colon.powershell</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[;{])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>(?&lt;![;{])\s+</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>(?i:base)</string>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>variable.language.super.powershell</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=[;{])</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>comment</key>
													<string>(?&lt;![;{])\s+</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#invocationParameterSet</string>
												</dict>
											</array>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#invocationParameterSet</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;![\w-])((?i:enum))(?=\s)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.enum.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[^\s])|(?&lt;=})</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;![\w-])([\p{L}_]\w*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.enum.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\s])|(?&lt;=})</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>optional user specified type, PowerShell Core &gt;= 6.2.0</string>
							<key>begin</key>
							<string>:</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.colon.powershell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[^\s:])|(?&lt;=})</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;![\w-])([\p{L}_]\w*(?:\.\g&lt;1&gt;?)?)</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#type_keywords</string>
												</dict>
												<dict>
													<key>match</key>
													<string>[^\.]+</string>
													<key>name</key>
													<string>storage.type.powershell</string>
												</dict>
												<dict>
													<key>match</key>
													<string>\.</string>
													<key>name</key>
													<string>punctuation.accessor.type.powershell</string>
												</dict>
											</array>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[^\s])|(?&lt;=})</string>
									<key>applyEndPatternLast</key>
									<true/>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#commentBlock</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#commentLine</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?&lt;!})[^\s{}]+</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentBlock</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentLine</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!})[^\s{}:]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.enumeration.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;![\w-])([\p{L}_]\w*)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.variable.enum-member.powershell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[;}\n])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>=</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.enum-member.powershell</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=[;}\n])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#argumentModeEscapes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentBlock</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentLine</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^;\s][^;]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#argumentModeEscapes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w)|\G)-(?i:is(?:not)?|as)(?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.type.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w|!)|\G)-(?i:[ic]?(?:eq|ne|[gl][te]|(?:not)?(?:like|match|contains|in)|replace))(?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w|!)|\G)-(?i:join|split)(?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.unary.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w|!)|\G)-(?i:and|or|not|xor)(?!\p{L})|!</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w|!)|\G)-(?i:band|bor|bnot|bxor|shl|shr)(?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.bitwise.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:(?&lt;!\w|!)|\G)-(?i:f)(?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.string-format.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(?:(?&lt;!\w|!)|\G)-\p{L}\w*</string>
			<key>name</key>
			<string>entity.name.parameter.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\+|--</string>
			<key>name</key>
			<string>keyword.operator.unary.powershell</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>[+%*/-]?=|[+/*%-](?!\p{L})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\|\||&amp;&amp;|;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.powershell</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&amp;|(?&lt;!\w|!)(?&lt;!\.)\.(?=\s)|,|\|</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.other.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>the range operator is only available after an operand (binary operator)</string>
			<key>begin</key>
			<string>(?&lt;!^)\s*(\.\.)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.range.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#quotedStrings_Members</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>when nothing else matches in usual tokenizing, consume it to prevent other patterns from striking in the middle of what might be a command name.</string>
			<key>begin</key>
			<string>(?=[^\s])</string>
			<key>end</key>
			<string>(?=[(){}|;&amp;\s])</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>contentName</key>
			<string>unquoted.text.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#unquotedStrings_text</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Needed to parse stuff correctly in 'argument mode'. (See about_parsing.)</string>
			<key>include</key>
			<string>#argumentModeEscapes</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>commentBlock</key>
		<dict>
			<key>begin</key>
			<string>&lt;#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.begin.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>#&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.end.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentEmbeddedDocs</string>
				</dict>
			</array>
		</dict>
		<key>commentLine</key>
		<dict>
			<key>begin</key>
			<string>(#)#*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$(?=(\n)?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.line.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentEmbeddedDocs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#RequiresDirective</string>
				</dict>
			</array>
		</dict>
		<key>argumentModeEscapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>`(?:['0abnfrvt\x{2018}-\x{201B}"\x{201C}-\x{201E}$`\n])</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>`</string>
					<key>name</key>
					<string>invalid.character.escape.powershell</string>
				</dict>
			</array>
		</dict>
		<key>attribute</key>
		<dict>
			<key>begin</key>
			<string>(\[)\s*\b(?i)(cmdletbinding|alias|flags|ordered|outputtype|parameter|validatenotnull|validatenotnullorempty|validatecount|validateset|allownull|allowemptycollection|allowemptystring|supportswildcards|validatescript|validaterange|validatepattern|validatelength)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.bracket.begin.powershell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.attribute.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.bracket.end.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.attribute.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.powershell</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(mandatory|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|position|parametersetname|defaultparametersetname|supportsshouldprocess|supportspaging|positionalbinding|helpuri|confirmimpact|helpmessage|ignorecase)\b</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.attribute.powershell</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.powershell</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>commands</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Verb-Noun pattern:</string>
					<key>match</key>
					<string>(?:(\p{L}|\d|_|-|\\|:)*\\)?\b(?i:Add|Approve|Assert|Backup|Block|Build|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Deploy|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Mount|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Write)-.+?(?:\.(?i:exe|cmd|bat|ps1))?\b</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Builtin cmdlets with reserved verbs</string>
					<key>match</key>
					<string>(?&lt;!\w)(?i:foreach-object)(?!\w)</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Builtin cmdlets with reserved verbs</string>
					<key>match</key>
					<string>(?&lt;!\w)(?i:where-object)(?!\w)</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Builtin cmdlets with reserved verbs</string>
					<key>match</key>
					<string>(?&lt;!\w)(?i:sort-object)(?!\w)</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Builtin cmdlets with reserved verbs</string>
					<key>match</key>
					<string>(?&lt;!\w)(?i:tee-object)(?!\w)</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
			</array>
		</dict>
		<key>commentEmbeddedDocs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.string.documentation.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:^|\G)(?i:\s*(\.)(COMPONENT|DESCRIPTION|EXAMPLE|EXTERNALHELP|FORWARDHELPCATEGORY|FORWARDHELPTARGETNAME|FUNCTIONALITY|INPUTS|LINK|NOTES|OUTPUTS|REMOTEHELPRUNSPACE|ROLE|SYNOPSIS))(?:\s*$)</string>
					<key>name</key>
					<string>comment.documentation.embedded.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.string.documentation.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:^|\G)(?i:\s*(\.)(PARAMETER|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP)\s+([a-z0-9-_]+))</string>
					<key>name</key>
					<string>comment.documentation.embedded.powershell</string>
				</dict>
			</array>
		</dict>
		<key>doubleQuotedStringEscapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>`(?:[`0abnfrvt\s"\x{201C}-\x{201E}$])</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>`</string>
					<key>name</key>
					<string>invalid.character.escape.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:["\x{201C}-\x{201E}]){2}</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
			</array>
		</dict>
		<key>doubleQuotedHereStringEscapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>`(?:[`0abnfrvt\s"\x{201C}-\x{201E}'\x{2018}-\x{201B}$])</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>`</string>
					<key>name</key>
					<string>invalid.character.escape.powershell</string>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![\w-])((?i:function|filter|configuration|workflow))(?=\s)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[//s])|(?&lt;=})</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;![\w-])(?:(global|local|script|private)(:))?(?:(?=[\p{L}:_\\/\[\]-]|`(?!\s))|(?&lt;=:)(?=[`"\x{201C}-\x{201E}'\x{2018}-\x{201B}]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.colon.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[//s])|(?&lt;=})</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\G</string>
							<key>end</key>
							<string>(?=[(){}|;&amp;\s])</string>
							<key>applyEndPatternLast</key>
							<false/>
							<key>contentName</key>
							<string>entity.name.function.powershell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#unquotedStrings_text</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\G)(?&lt;!})</string>
							<key>end</key>
							<string>(?=[//s])|(?&lt;=})</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.braces.begin.powershell</string>
										</dict>
									</dict>
									<key>end</key>
									<string>}</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.braces.end.powershell</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.function.powershell</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#invocationParameterSet</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentBlock</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentLine</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?&lt;!})[^\s{}()]+</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>`\s</string>
					<key>name</key>
					<string>invalid.character.escape.powershell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<key>invocationParameterSet</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.begin.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameters.powershell</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.end.powershell</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.comma.powershell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>interpolatedStringContent</key>
		<dict>
			<key>begin</key>
			<string>(?=\()</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>interpolated.simple.source.powershell</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.powershell</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\))(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>begin</key>
			<string>(?=\$\()</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\$)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.subexpression.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.complex.subexpression.powershell</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.powershell</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\))(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>stringInterpolation</key>
		<dict>
			<key>begin</key>
			<string>(\$)(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.subexpression.powershell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.begin.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.embedded.subexpression.powershell</string>
			<key>contentName</key>
			<string>interpolated.complex.source.powershell</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.group.end.powershell</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>numericConstant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(?:(?&lt;!\w)|\G)([-+]?(?:[0-9]+(?i:(?![ed]|\.(?!\.))|(?:\.[0-9]*)?((?:(?i:e)[-+]?[0-9]+)?l))|(?:\.[0-9]+)\g&lt;2&gt;))((?i:[kmgtp]b)?)\b</string>
					<key>end</key>
					<string>\G</string>
				</dict>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hex.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(?:(?&lt;!\w)|\G)([-+]?0(?i:x[0-9a-f_]+l?))((?i:[kmgtp]b)?)\b</string>
					<key>end</key>
					<string>\G</string>
				</dict>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(?:(?&lt;!\w)|\G)([-+]?(?:(?:[0-9]+)|(?=\.[0-9]))(?:\.[0-9]*)?(?i:(?:e[-+]?[0-9]+)?(?!l)d?))((?i:[kmgtp]b)?)\b</string>
					<key>end</key>
					<string>\G</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.binary.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>(?:(?&lt;!\w)|\G)([-+]?0(?i:b[01_]+l?))((?i:[kmgtp]b)?)(?!\w)</string>
				</dict>
			</array>
		</dict>
		<key>scriptblock</key>
		<dict>
			<key>begin</key>
			<string>(?={)</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.scriptblock.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=})(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>comment</key>
			<string>This is used by both type attribute references, attribute references need to be moved here</string>
			<key>begin</key>
			<string>(?=\[)</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.bracket.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.bracket.end.powershell</string>
						</dict>
					</dict>
					<key>applyEndPatternLast</key>
					<true/>
					<key>name</key>
					<string>meta.type-reference.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i:ref)(?=\])</string>
							<key>name</key>
							<string>storage.modifier.powershell</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type_SubType</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=])(?=\.(?!\.)|::|\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.bracket.end.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type_SubType</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.bracket.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(])|(?&gt;[^\s\p{L},])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.bracket.end.powershell</string>
						</dict>
					</dict>
					<key>applyEndPatternLast</key>
					<true/>
					<key>name</key>
					<string>meta.type-reference.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_SubType</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!])[^\s\[\]+]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&lt;![\w-])([\p{L}_]\w*(?:\.\g&lt;2&gt;?)?)(?:`+\d+)?(?:\++\g&lt;1&gt;)?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#type_keywords</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^\.+]+</string>
									<key>name</key>
									<string>storage.type.powershell</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.accessor.type.powershell.powershell</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\+</string>
									<key>name</key>
									<string>keyword.operator.type.powershell</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\s])|(?&lt;=])</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_SubType</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!])[^\s\[\]+]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
			</array>
		</dict>
		<key>type_keywords</key>
		<dict>
			<key>comment</key>
			<string>primitive types and base classes often used</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w-])(?i:type|void|switch|(?:ps(?:custom)?)?object|hashtable|string|single|float|double|decimal|s?byte|bool(?:ean)?|char|valuetype|datetime|array|u?int(?:32|16|64)|int|long)(?!\w)</string>
					<key>name</key>
					<string>keyword.type.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w-])(?i:system|math|text|convert|regex|xml)(?!\w)</string>
					<key>name</key>
					<string>support.class.powershell</string>
				</dict>
			</array>
		</dict>
		<key>accessors</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\G(?:\.(?!\.)|(?&lt;!:)::)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#members</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>consume spaces and comments and line ends until the next token appears</string>
							<key>begin</key>
							<string>\G(?&lt;=\.|::)(?!\S)</string>
							<key>end</key>
							<string>(?=.)</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\s+</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentLine</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#commentBlock</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\[)</string>
					<key>end</key>
					<string>(?!.\G)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.bracket.begin.powershell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>]</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.bracket.end.powershell</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.index.powershell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=])(?=\.(?!\.)|::|\[)</string>
							<key>end</key>
							<string>(?=[^\s\p{L}]|\n)</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#accessors</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^\s\W]+</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
			</array>
		</dict>
		<key>members</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w-)((?i:(foreach|where)(?=[\({])))</string>
					<key>name</key>
					<string>support.function.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[\p{L}_]\w*(?=\()</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.function.powershell</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>[\p{L}_]\w*(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.other.object.property.powershell</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>[\p{L}_]\w*</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.powershell</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#quotedStrings_Members</string>
				</dict>
			</array>
		</dict>
		<key>variable_inner</key>
		<dict>
			<key>comment</key>
			<string>seperate the parts of the variable name and scope them</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>These are special constants.</string>
					<key>match</key>
					<string>((\$)(?i:(:?(?:False|Null|True)))\b)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.builtin.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>These are the other built-in constants.</string>
					<key>match</key>
					<string>((\$)(?i:(:?(?:Error|ExecutionContext|Host|Home|PID|PsHome|PsVersionTable|ShellID)\b)))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.builtin.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((\$)(?i:((?:[$^?])|:\?|:?(?:_|Args|ConsoleFileName|Event|EventArgs|EventSubscriber|ForEach|Input|LastExitCode|Matches|MyInvocation|NestedPromptLevel|Profile|PSBoundParameters|PsCmdlet|PsCulture|PSDebugContext|PSItem|PSCommandPath|PSScriptRoot|PsUICulture|Pwd|Sender|SourceArgs|SourceEventArgs|StackTrace|Switch|This)\b)))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Style preference variables as language variables so that they stand out.</string>
					<key>match</key>
					<string>((\$)(?i:(:?(?:ConfirmPreference|DebugPreference|ErrorActionPreference|ErrorView|FormatEnumerationLimit|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|OFS|OutputEncoding|ProgressPreference|PsCulture|PSDebugContext|PSDefaultParameterValues|PSEmailServer|PSItem|PSModuleAutoloadingPreference|PSSenderInfo|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|VerbosePreference|WarningPreference|WhatIfPreference)\b)))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.colon.powershell</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>support.variable.drive.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?i:(\$)(?:(?:(global|local|private|script|using|workflow)(:)|((?:[\p{L}_]\w*):|:))(?!:))?+((?:\p{L}|\d|[_?]|:(?!:))+)))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.colon.powershell</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>support.variable.drive.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>splatting cannot have members and certain characters following, including no line comment</string>
					<key>match</key>
					<string>((?i:(\@)(?:(?:(global|local|private|script|using|workflow)(:)|((?:[\p{L}_]\w*):|:))(?!:))?+((?:\p{L}|\d|[_?]|:(?!:))++)))(?![~`!@#$%^*&lt;&gt;\]\\/+-])</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.braces.begin.powershell</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.colon.powershell</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.variable.drive.powershell</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.braces.end.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?i:(\$)(\{)(?:(?:(global|local|private|script|using|workflow)(:)|((?:[^`{}:]|`[`{}]?+)+:|:)))?+([^`{}]|`[`{}]?+)+(\})))</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\$(?:(?:(?:(?:[\p{L}_]\w*):|:)(?!:))?+(?:\p{L}|\d|[_?]|:(?!:))+|\{(?:(?:(?:[^`{}:]|`[`{}]?+)+:|:))?+(?:[^`{}]|`[`{}]?+)+(\})))</string>
					<key>end</key>
					<string>(?!.\G)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\$(?:(?:(?:(?:[\p{L}_]\w*):|:)(?!:))?+(?:\p{L}|\d|[_?]|:(?!:))+|\{(?:(?:(?:[^`{}:]|`[`{}]?+)+:|:))?+(?:[^`{}]|`[`{}]?+)+(\}))(?=\.(?!\.)|::|\[)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#variable_inner</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[^\s\p{L}]|\n)</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#accessors</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^\s\W]+</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\$(?:(?:(?:(?:[\p{L}_]\w*):|:)(?!:))?+(?:\p{L}|\d|[_?]|:(?!:))+|\{(?:(?:(?:[^`{}:]|`[`{}]?+)+:|:))?+(?:[^`{}]|`[`{}]?+)+(\}))</string>
							<key>end</key>
							<string>(?!.\G)</string>
							<key>applyEndPatternLast</key>
							<true/>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#variable_inner</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@(?:(?:(?:[\p{L}_]\w*):|:)(?!:))?+(?:\p{L}|\d|[_?]|:(?!:))++(?![~`!@#$%^*&lt;&gt;\]\\/"\x{201C}-\x{201E}'\x{2018}-\x{201B}+-])</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#variable_inner</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>UsingDirective</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)(?i:(using))\s+(?i:(namespace|module))\s+(?i:((?:\w+(?:\.)?)+))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.using.powershell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.powershell</string>
				</dict>
			</dict>
		</dict>
		<key>RequiresDirective</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=#)(?i:(requires))\s</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.requires.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.requires.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\-(?i:Modules|PSSnapin|RunAsAdministrator|ShellId|Version)</string>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!-)\b\p{L}+|\d+(?:\.\d+)*</string>
					<key>name</key>
					<string>variable.parameter.powershell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hashtable</string>
				</dict>
			</array>
		</dict>
		<key>variableNoProperty</key>
		<dict>
			<key>match</key>
			<string>(\$)((?:(?:(?:[\p{L}_]\w*):|:)(?!:))?+(?:\p{L}|\d|[_?]|:(?!:))+|\{(?:(?:(?:[^`{}:]|`[`{}]?)+:|:))?+([^`{}]|`[`{}]?)+(\}))</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable_inner</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.embedded.interpolated.powershell</string>
		</dict>
		<key>hashtable</key>
		<dict>
			<key>begin</key>
			<string>(?=@\{)</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@)(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.hashtable.begin.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.hashtable.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(\w+)(?=\s*=)</string>
							<key>name</key>
							<string>entity.name.variable.property.powershell</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>#scriptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\})(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>quotedStrings_Members</key>
		<dict>
			<key>begin</key>
			<string>(?=@?(['\x{2018}-\x{201B}"\x{201C}-\x{201E}]))(?:(?&lt;!@\g&lt;1&gt;)|\s*$)</string>
			<key>end</key>
			<string>(?!.\G)</string>
			<key>applyEndPatternLast</key>
			<true/>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>['\x{2018}-\x{201B}]</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>['\x{2018}-\x{201B}]</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>['\x{2018}-\x{201B}]{2}</string>
							<key>name</key>
							<string>constant.character.escape.powershell</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>@(?:["\x{201C}-\x{201E}])(?=\s*$)</string>
					<key>end</key>
					<string>^(?:["\x{201C}-\x{201E}])@</string>
					<key>name</key>
					<string>string.quoted.double.heredoc.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variableNoProperty</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#doubleQuotedHereStringEscapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#stringInterpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>@['\x{2018}-\x{201B}](?=\s*$)</string>
					<key>end</key>
					<string>^['\x{2018}-\x{201B}]@</string>
					<key>name</key>
					<string>string.quoted.single.heredoc.powershell</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:["\x{201C}-\x{201E}])</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.powershell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:["\x{201C}-\x{201E}])</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.powershell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variableNoProperty</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#doubleQuotedStringEscapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#stringInterpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=^(['\x{2018}-\x{201B}"\x{201C}-\x{201E}])@|(?&lt;=\g&lt;1&gt;))(?=\.(?!\.)|::|\[)</string>
					<key>end</key>
					<string>(?=[^\s\p{L}]|\n)</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#accessors</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^\s\W]+</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>unquotedStrings_text</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>`\s</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#argumentModeEscapes</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>['\x{2018}-\x{201B}]</string>
					<key>end</key>
					<string>['\x{2018}-\x{201B}]</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>['\x{2018}-\x{201B}]{2}</string>
							<key>name</key>
							<string>constant.character.escape.powershell</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>["\x{201C}-\x{201E}]</string>
					<key>end</key>
					<string>["\x{201C}-\x{201E}]</string>
					<key>applyEndPatternLast</key>
					<true/>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#doubleQuotedStringEscapes</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\$\(</string>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#unquotedStrings_text</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\$\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#unquotedStrings_text</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.powershell</string>
	<key>uuid</key>
	<string>f8f5ffb0-503e-11df-9879-0800200c9a66</string>
</dict>
</plist>
